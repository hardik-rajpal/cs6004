Soot started on Wed Mar 20 10:49:07 IST 2024
Dummy graph: 
	{
		stack{
			r2->[ @param0, ]
		}
		heap{
		}
	}
ParamMap:{
r7->r2
}

ParamMap:{
r2->r1
r3->r9
}

ParamMap:{
r2->r9
r3->r1
}

Unit: "r2 := @parameter0: java.lang.String[]"{
	In: 
	{
		stack{
			r2->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			r2->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = new Node"{
	In: 
	{
		stack{
			r2->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r0.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "r1 = $r0"{
	In: 
	{
		stack{
			$r0->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_8(), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "$r3 = staticinvoke <Test: Node foo(java.lang.String[])>(r2)"{
	In: 
	{
		stack{
			$r0->[ Obj_8(), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_8(), ]
			$r3->[ Obj_13(9), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
			Obj_13(9).f->[ Obj_24(9,17), ]
			Obj_14(9).f->[ Obj_15(9), ]
			Obj_16(9).f->[ Obj_24(9,19), ]
		}
	}
}
Unit: "r1.<Node: Node f> = $r3"{
	In: 
	{
		stack{
			$r0->[ Obj_8(), ]
			$r3->[ Obj_13(9), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
			Obj_13(9).f->[ Obj_24(9,17), ]
			Obj_14(9).f->[ Obj_15(9), ]
			Obj_16(9).f->[ Obj_24(9,19), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_8(), ]
			$r3->[ Obj_13(9), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
			Obj_13(9).f->[ Obj_24(9,17), ]
			Obj_14(9).f->[ Obj_15(9), ]
			Obj_16(9).f->[ Obj_24(9,19), ]
			Obj_8().f->[ Obj_13(9), ]
		}
	}
}
Unit: "r4 = r1.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_8(), ]
			$r3->[ Obj_13(9), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
		}
		heap{
			Obj_13(9).f->[ Obj_24(9,17), ]
			Obj_14(9).f->[ Obj_15(9), ]
			Obj_16(9).f->[ Obj_24(9,19), ]
			Obj_8().f->[ Obj_13(9), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_8(), ]
			$r3->[ Obj_13(9), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
			r4->[ Obj_13(9), ]
		}
		heap{
			Obj_13(9).f->[ Obj_24(9,17), ]
			Obj_14(9).f->[ Obj_15(9), ]
			Obj_16(9).f->[ Obj_24(9,19), ]
			Obj_8().f->[ Obj_13(9), ]
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			$r0->[ Obj_8(), ]
			$r3->[ Obj_13(9), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
			r4->[ Obj_13(9), ]
		}
		heap{
			Obj_13(9).f->[ Obj_24(9,17), ]
			Obj_14(9).f->[ Obj_15(9), ]
			Obj_16(9).f->[ Obj_24(9,19), ]
			Obj_8().f->[ Obj_13(9), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_8(), ]
			$r3->[ Obj_13(9), ]
			r1->[ Obj_8(), ]
			r2->[ @param0, ]
			r4->[ Obj_13(9), ]
		}
		heap{
			Obj_13(9).f->[ Obj_24(9,17), ]
			Obj_14(9).f->[ Obj_15(9), ]
			Obj_16(9).f->[ Obj_24(9,19), ]
			Obj_8().f->[ Obj_13(9), ]
		}
	}
}
Dummy graph: 
	{
		stack{
			r7->[ @param0, ]
		}
		heap{
		}
	}
ParamMap:{
r2->r1
r3->r9
}

ParamMap:{
r2->r9
r3->r1
}

Unit: "r7 := @parameter0: java.lang.String[]"{
	In: 
	{
		stack{
			r7->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			r7->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = new Node"{
	In: 
	{
		stack{
			r7->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r0.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "r1 = $r0"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "$r2 = new Node"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r2.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
}
Unit: "r8 = $r2"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
		}
	}
}
Unit: "$r3 = new Node"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r3.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
		}
	}
}
Unit: "r8.<Node: Node f> = $r3"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
			Obj_14().f->[ Obj_15(), ]
		}
	}
}
Unit: "$r4 = new Node"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
			Obj_14().f->[ Obj_15(), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
			Obj_14().f->[ Obj_15(), ]
		}
	}
}
Unit: "specialinvoke $r4.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
			Obj_14().f->[ Obj_15(), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
			Obj_14().f->[ Obj_15(), ]
		}
	}
}
Unit: "r9 = $r4"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
		}
		heap{
			Obj_14().f->[ Obj_15(), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_14().f->[ Obj_15(), ]
		}
	}
}
Unit: "staticinvoke <Test: void bar(Node,Node)>(r1, r9)"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_14().f->[ Obj_15(), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
		}
	}
}
Unit: "r5 = r9.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r5->[ ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
		}
	}
}
Unit: "staticinvoke <Test: void bar(Node,Node)>(r9, r1)"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r5->[ ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r5->[ ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
			Obj_16().f->[ Obj_24(19), ]
		}
	}
}
Unit: "r6 = r1.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r5->[ ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
			Obj_16().f->[ Obj_24(19), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r5->[ ]
			r6->[ Obj_24(17), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
			Obj_16().f->[ Obj_24(19), ]
		}
	}
}
Unit: "return r1"{
	In: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r5->[ ]
			r6->[ Obj_24(17), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
			Obj_16().f->[ Obj_24(19), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_13(), ]
			$r2->[ Obj_14(), ]
			$r3->[ Obj_15(), ]
			$r4->[ Obj_16(), ]
			r1->[ Obj_13(), ]
			r5->[ ]
			r6->[ Obj_24(17), ]
			r7->[ @param0, ]
			r8->[ Obj_14(), ]
			r9->[ Obj_16(), ]
		}
		heap{
			Obj_13().f->[ Obj_24(17), ]
			Obj_14().f->[ Obj_15(), ]
			Obj_16().f->[ Obj_24(19), ]
		}
	}
}
Dummy graph: 
	{
		stack{
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
Unit: "r2 := @parameter0: Node"{
	In: 
	{
		stack{
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
}
Unit: "r3 := @parameter1: Node"{
	In: 
	{
		stack{
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = new Node"{
	In: 
	{
		stack{
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r0.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
}
Unit: "r1 = $r0"{
	In: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r1->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
}
Unit: "r2.<Node: Node f> = r1"{
	In: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r1->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r1->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
			@param0.f->[ Obj_24(), ]
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r1->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
			@param0.f->[ Obj_24(), ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_24(), ]
			r1->[ Obj_24(), ]
			r2->[ @param0, ]
			r3->[ @param1, ]
		}
		heap{
			@param0.f->[ Obj_24(), ]
		}
	}
}
Soot finished on Wed Mar 20 10:49:24 IST 2024
Soot has run for 0 min. 16 sec.
Test:bar 
Test:foo 
Test:main 
