public class Test extends java.lang.Object
{
    public static Node global;

    public void <init>()
    {
        Test r0;

        r0 := @this: Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <Test: Node foo()>();

        return;
    }

    public static Node foo()
    {
        Node $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, r9;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        r9 = $r0;

        $r1 = new Node;

        specialinvoke $r1.<Node: void <init>()>();

        $r4 = $r1.<Node: Node f>;

        $r3 = $r1.<Node: Node g>;

        if $r4 != $r3 goto label2;

        $r6 = $r1.<Node: Node f>;

        $r5 = $r1.<Node: Node g>;

        if $r6 != $r5 goto label1;

        $r8 = new Node;

        specialinvoke $r8.<Node: void <init>()>();

        r9 = $r8;

        goto label2;

     label1:
        $r7 = new Node;

        specialinvoke $r7.<Node: void <init>()>();

        r9 = $r7;

     label2:
        return r9;
    }
}
