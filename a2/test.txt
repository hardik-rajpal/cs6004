Soot started on Thu Feb 29 12:02:20 IST 2024
Unit: "r0 := @this: Node"{
	In: 
Unit: "r0 := @this: Test"{
	In: 
	{
		stack{
	{
		stack{
		}
		heap{
		}
	}
	Out: 
	{
		stack{
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			r0->[ ]
		}
		heap{
		}
	}
}
			r0->[ ]
Unit: "specialinvoke r0.<java.lang.Object: void <init>()>()"{
		}
		heap{
		}
	}
}
	In: 
Unit: "specialinvoke r0.<java.lang.Object: void <init>()>()"{
	In: 
	{
		stack{
	{
		stack{
			r0->[ 			r0->[ ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			r0->[ ]
			r0->[ ]
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			r0->[ ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			r0->[ ]
		}
			r0->[ 		heap{
		}
	}
}
]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			r0->[ ]
		}
		heap{
		}
	}
}
r3 := @parameter0: java.lang.String[]
class soot.jimple.internal.JIdentityStmt
Unit: "r3 := @parameter0: java.lang.String[]"{
	In: 
	{
		stack{
			@parameter0->[ param_0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = new Node"{
	In: 
	{
		stack{
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r0.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
}
Unit: "$r1 = new Node"{
	In: 
	{
		stack{
			$r0->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_10, ]
			$r1->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r1.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_10, ]
			$r1->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_10, ]
			$r1->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
}
Unit: "staticinvoke <Test: Node foo(Node,Node)>($r0, $r1)"{
	In: 
	{
		stack{
			$r0->[ Obj_10, ]
			$r1->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_10, ]
			$r1->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			$r0->[ Obj_10, ]
			$r1->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_10, ]
			$r1->[ Obj_10, ]
			@parameter0->[ param_0, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
}
r3 := @parameter0: Node
class soot.jimple.internal.JIdentityStmt
r4 := @parameter1: Node
class soot.jimple.internal.JIdentityStmt
Unit: "r3 := @parameter0: Node"{
	In: 
	{
		stack{
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
}
Unit: "r4 := @parameter1: Node"{
	In: 
	{
		stack{
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = new Node"{
	In: 
	{
		stack{
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r0.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
		}
		heap{
		}
	}
}
Unit: "r7 = $r0"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
		}
	}
}
Unit: "$r1 = new Node"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r1.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
		}
	}
}
Unit: "$r0.<Node: Node f> = $r1"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ Obj_16, ]
		}
	}
}
Unit: "$r1.<Node: Node f> = r3"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ Obj_16, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ Obj_16, ]
			Obj_16.f->[ param_0, ]
		}
	}
}
Unit: "$r5 = r4.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ Obj_16, ]
			Obj_16.f->[ param_0, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ Obj_16, ]
			Obj_16.f->[ param_0, ]
		}
	}
}
Unit: "$r0.<Node: Node f> = $r5"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ Obj_16, ]
			Obj_16.f->[ param_0, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
}
Unit: "if $r1 != r7 goto $r6 = $r1.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
}
Unit: "r7 = r7.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
}
Unit: "goto [?= (branch)]"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
}
Unit: "$r6 = $r1.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			$r6->[ param_0, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
}
Unit: "return $r6"{
	In: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			$r6->[ param_0, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_15, ]
			$r1->[ Obj_16, ]
			$r5->[ ]
			$r6->[ param_0, ]
			@parameter0->[ param_0, ]
			@parameter1->[ param_1, ]
			r3->[ param_0, ]
			r4->[ param_1, ]
			r7->[ Obj_15, ]
		}
		heap{
			Obj_15.f->[ ]
			Obj_16.f->[ param_0, ]
		}
	}
}
Soot finished on Thu Feb 29 12:02:20 IST 2024
Soot has run for 0 min. 0 sec.
