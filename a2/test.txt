Soot started on Mon Mar 04 13:57:37 IST 2024
Unit: "r0 := @this: Node"{
	In: 
Unit: "r0 := @this: Test"{
	In: 
	{
		stack{
	{
		stack{
			f->[ 			global->[ @field_global, @field_f, ]
			g->[ @field_g, ]
			r0->[ ?, ]
		}
		heap{
		}
]
			r0->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ ?, ]
	}
	Out: 
	{
		stack{
			f->[ @field_f, ]
			g->[ 			x->[ @field_g, ]
@field_x, ]
		}
		heap{
		}
	}
			r0->[ ?, ]
		}
		heap{
		}
	}
}
}
Unit: "specialinvoke r0.<java.lang.Object: void <init>()>()"{
	In: 
	{
		stack{
Unit: "specialinvoke r0.<java.lang.Object: void <init>()>()"{
	In: 
			f->[ @field_f, ]
			g->[ @field_g, ]
	{
		stack{
			global->[ 			r0->[ @field_global, ]
?, ]
		}
		heap{
			r0->[ 		}
	}
	Out: 
	{
		stack{
?, ]
			x->[ @field_x, ]
		}
		heap{
		}
			f->[ @field_f, ]
	}
	Out: 
	{
		stack{
			global->[ 			g->[ @field_g, ]
			r0->[ ?, ]
@field_global, ]
			r0->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			f->[ @field_f, ]
			g->[ @field_g, ]
			r0->[ ?, ]
		}
		heap{
		}
	}
	Out: 
			global->[ 	{
		stack{
			f->[ @field_f, ]
			g->[ @field_g, ]
			r0->[ ?, ]
		}
		heap{
		}
	}
}
@field_global, ]
			r0->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Escaping Info
Node:<init> 
Escaping Info
Test:<init> 
r3 := @parameter0: java.lang.String[]
class soot.jimple.internal.JIdentityStmt
$r1 = new Node fields:<Node: Node f>
Unit: "r0 := @this: Test"{
	In: 
	{
		stack{
			$r1->[ ?, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ ?, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "r3 := @parameter0: java.lang.String[]"{
	In: 
	{
		stack{
			$r1->[ ?, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ ?, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "$r1 = new Node"{
	In: 
	{
		stack{
			$r1->[ ?, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ Obj_13, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r1.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r1->[ Obj_13, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ Obj_13, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "virtualinvoke r0.<Test: Node foo(Node)>($r1)"{
	In: 
	{
		stack{
			$r1->[ Obj_13, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ Obj_13, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			$r1->[ Obj_13, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ Obj_13, ]
			global->[ @field_global, ]
			r0->[ ?, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Escaping Info
Test:main Obj_13 
r4 := @parameter0: Node
class soot.jimple.internal.JIdentityStmt
Unit: "r4 := @parameter0: Node"{
	In: 
	{
		stack{
			$r0->[ ?, ]
			$r1->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ ?, ]
			$r1->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = <Test: Node[] global>"{
	In: 
	{
		stack{
			$r0->[ ?, ]
			$r1->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "$r1 = $r0[0]"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
			@field_global.[]->[ @Obj_16, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
			@field_global.[]->[ @Obj_16, ]
		}
	}
}
Unit: "r5 = $r1.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ ?, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_16.f->[ @Obj_16, ]
			@field_global.[]->[ @Obj_16, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ @Obj_16, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_16.f->[ @Obj_16, ]
			@field_global.[]->[ @Obj_16, ]
		}
	}
}
Unit: "$r2 = <Test: Node[] global>"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ @Obj_16, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_16.f->[ @Obj_16, ]
			@field_global.[]->[ @Obj_16, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ @field_global, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ @Obj_16, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_16.f->[ @Obj_16, ]
			@field_global.[]->[ @Obj_16, ]
		}
	}
}
Unit: "$r3 = $r2[0]"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ @field_global, ]
			$r3->[ ?, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ @Obj_16, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_16.f->[ @Obj_16, ]
			@field_global.[]->[ @Obj_16, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_16, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ @Obj_16, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_16.f->[ @Obj_16, ]
			@field_global.[]->[ @Obj_16, ]
		}
	}
}
Unit: "return $r3"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_16, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ @Obj_16, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_16.f->[ @Obj_16, ]
			@field_global.[]->[ @Obj_16, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_16, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_16, ]
			global->[ @field_global, ]
			r4->[ @param0, ]
			r5->[ @Obj_16, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_16.f->[ @Obj_16, ]
			@field_global.[]->[ @Obj_16, ]
		}
	}
}
Escaping Info
Test:bar 
r13 := @parameter0: Node
class soot.jimple.internal.JIdentityStmt
$r0 = new Man fields:<Man: int h>
$r9 = new Node fields:<Node: Node f>
$r11 = new Node fields:<Node: Node f>
Unit: "r12 := @this: Test"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ ?, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ ?, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "r13 := @parameter0: Node"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ ?, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ ?, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = new Man"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ ?, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r0.<Man: void <init>()>()"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "$r2 = <Test: Node[] global>"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ ?, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
		}
	}
}
Unit: "$r3 = $r2[0]"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ ?, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r4 = $r3.<Node: Node f>"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ ?, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r5 = $r4.<Node: Node f>"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ ?, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r6 = $r5.<Node: Node f>"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ ?, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r7 = $r6.<Node: Node f>"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ ?, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r8 = $r7.<Node: Node g>"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ ?, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r10 = $r8.<Node: Node f>"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ ?, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r9 = new Node"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ ?, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "specialinvoke $r9.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r10.<Node: Node g> = $r9"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ @Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$i0 = $r0.<Man: int h>"{
	In: 
	{
		stack{
			$i0->[ ?, ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$i1 = $i0 + 1"{
	In: 
	{
		stack{
			$i0->[ ]
			$i1->[ ?, ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
}
Unit: "$r0.<Man: int h> = $i1"{
	In: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
			Obj_20.h->[ ]
		}
	}
}
Unit: "$r11 = new Node"{
	In: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ ?, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
			Obj_20.h->[ ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
			Obj_20.h->[ ]
		}
	}
}
Unit: "specialinvoke $r11.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
			Obj_20.h->[ ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
			Obj_20.h->[ ]
		}
	}
}
Unit: "return $r11"{
	In: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
			Obj_20.h->[ ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ ]
			$i1->[ ]
			$r0->[ Obj_20, ]
			$r10->[ @Obj_21, ]
			$r11->[ Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_21, ]
			$r4->[ @Obj_21, ]
			$r5->[ @Obj_21, ]
			$r6->[ @Obj_21, ]
			$r7->[ @Obj_21, ]
			$r8->[ @Obj_21, ]
			$r9->[ Obj_21, ]
			global->[ @field_global, ]
			r12->[ ?, ]
			r13->[ @param0, ]
			x->[ @field_x, ]
		}
		heap{
			@Obj_21.f->[ @Obj_21, ]
			@Obj_21.g->[ Obj_21, ]
			@field_global.[]->[ @Obj_21, ]
			Obj_20.h->[ ]
		}
	}
}
Escaping Info
Test:foo Obj_21 Obj_23 
Soot finished on Mon Mar 04 13:57:37 IST 2024
Soot has run for 0 min. 0 sec.
