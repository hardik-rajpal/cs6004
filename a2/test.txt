Soot started on Mon Mar 04 14:23:00 IST 2024
Params for <init>:
0
Params for <init>:
0
Unit: "r0 := @this: Test"{
	In: 
Unit: "r0 := @this: Node"{
	In: 
	{
		stack{
	{
		stack{
			global->[ @field_global, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
			f->[ 	}
	Out: 
@field_f, ]
			g->[ 	{
		stack{
			global->[ @field_g, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			f->[ @field_global, ]
@field_f, ]
			g->[ @field_g, ]
			r0->[ @this, ]
		}
		heap{
		}
	}
}
			r0->[ @this, ]
			x->[ Unit: "specialinvoke r0.<java.lang.Object: void <init>()>()"{
	In: 
	{
		stack{
@field_x, ]
			y->[ 			f->[ @field_f, ]
			g->[ @field_g, ]
			r0->[ @this, ]
		}
@field_y, ]
		}
		heap{
		}
	}
}
		heap{
Unit: "specialinvoke r0.<java.lang.Object: void <init>()>()"{
	In: 
	{
		stack{
			global->[ @field_global, ]
		}
	}
	Out: 
	{
		stack{
			f->[ @field_f, ]
			g->[ @field_g, ]
			r0->[ @this, ]
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			f->[ 			r0->[ @this, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
@field_f, ]
			g->[ @field_g, ]
			r0->[ 		}
		heap{
@this, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ @this, ]
			f->[ @field_f, ]
			g->[ @field_g, ]
			x->[ @field_x, 			r0->[ @this, ]
		}
		heap{
		}
	}
}
]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ @this, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ @this, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Escaping Info
Escaping Info
Node:<init> Test:<init> 

Params for main:
1
r3 := @parameter0: java.lang.String[]
class soot.jimple.internal.JIdentityStmt
Unit: "r0 := @this: Test"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "r3 := @parameter0: java.lang.String[]"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ @param0, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "$r1 = new Node"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ Obj_14, ]
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r1.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r1->[ Obj_14, ]
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ Obj_14, ]
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "virtualinvoke r0.<Test: Node foo(Node)>($r1)"{
	In: 
	{
		stack{
			$r1->[ Obj_14, ]
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ Obj_14, ]
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "return"{
	In: 
	{
		stack{
			$r1->[ Obj_14, ]
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r1->[ Obj_14, ]
			global->[ @field_global, ]
			r0->[ @this, ]
			r3->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Escaping Info
Test:main Obj_14 
Params for bar:
1
r4 := @parameter0: Node
class soot.jimple.internal.JIdentityStmt
Unit: "r4 := @parameter0: Node"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r4->[ @param0, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r4->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = <Test: Node[] global>"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r4->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			global->[ @field_global, ]
			r4->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "$r1 = $r0[0]"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			global->[ @field_global, ]
			r4->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@field_global.[]->[ @Obj_17, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			global->[ @field_global, ]
			r4->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@field_global.[]->[ @Obj_17, ]
		}
	}
}
Unit: "r5 = $r1.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			global->[ @field_global, ]
			r4->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_17.f->[ @Obj_17, ]
			@field_global.[]->[ @Obj_17, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			global->[ @field_global, ]
			r4->[ ]
			r5->[ @Obj_17, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_17.f->[ @Obj_17, ]
			@field_global.[]->[ @Obj_17, ]
		}
	}
}
Unit: "$r2 = <Test: Node[] global>"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			global->[ @field_global, ]
			r4->[ ]
			r5->[ @Obj_17, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_17.f->[ @Obj_17, ]
			@field_global.[]->[ @Obj_17, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			$r2->[ @field_global, ]
			global->[ @field_global, ]
			r4->[ ]
			r5->[ @Obj_17, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_17.f->[ @Obj_17, ]
			@field_global.[]->[ @Obj_17, ]
		}
	}
}
Unit: "$r3 = $r2[0]"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			$r2->[ @field_global, ]
			global->[ @field_global, ]
			r4->[ ]
			r5->[ @Obj_17, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_17.f->[ @Obj_17, ]
			@field_global.[]->[ @Obj_17, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_17, ]
			global->[ @field_global, ]
			r4->[ ]
			r5->[ @Obj_17, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_17.f->[ @Obj_17, ]
			@field_global.[]->[ @Obj_17, ]
		}
	}
}
Unit: "return $r3"{
	In: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_17, ]
			global->[ @field_global, ]
			r4->[ ]
			r5->[ @Obj_17, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_17.f->[ @Obj_17, ]
			@field_global.[]->[ @Obj_17, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ @field_global, ]
			$r1->[ @Obj_17, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_17, ]
			global->[ @field_global, ]
			r4->[ ]
			r5->[ @Obj_17, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_17.f->[ @Obj_17, ]
			@field_global.[]->[ @Obj_17, ]
		}
	}
}
Escaping Info
Test:bar 
Params for foo:
1
r14 := @parameter0: Node
class soot.jimple.internal.JIdentityStmt
Unit: "r11 := @this: Test"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r14->[ @param0, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ @param0, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "r14 := @parameter0: Node"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ @param0, ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "$r0 = new Man"{
	In: 
	{
		stack{
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "specialinvoke $r0.<Man: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "$r2 = <Test: Node[] global>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
		}
	}
}
Unit: "$r3 = $r2[0]"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r4 = $r3.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r5 = $r4.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r6 = $r5.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r7 = $r6.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r8 = $r7.<Node: Node g>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r10 = $r8.<Node: Node f>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r9 = new Node"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "specialinvoke $r9.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r10.<Node: Node g> = $r9"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ @Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
		}
	}
}
Unit: "$r12 = r11.<Test: Man y>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
		}
	}
	Out: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
		}
	}
}
Unit: "$i0 = $r12.<Man: int h>"{
	In: 
	{
		stack{
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
		}
	}
}
Unit: "$i1 = $i0 + 1"{
	In: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
		}
	}
}
Unit: "$r0.<Man: int h> = $i1"{
	In: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
			Obj_21.h->[ ]
		}
	}
}
Unit: "r11.<Test: Man y> = $r0"{
	In: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ @Obj_23, ]
			Obj_21.h->[ ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ Obj_21, ]
			Obj_21.h->[ ]
		}
	}
}
Unit: "$r13 = new Node"{
	In: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ Obj_21, ]
			Obj_21.h->[ ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r13->[ Obj_25, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ Obj_21, ]
			Obj_21.h->[ ]
		}
	}
}
Unit: "specialinvoke $r13.<Node: void <init>()>()"{
	In: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r13->[ Obj_25, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ Obj_21, ]
			Obj_21.h->[ ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r13->[ Obj_25, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ Obj_21, ]
			Obj_21.h->[ ]
		}
	}
}
Unit: "return $r13"{
	In: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r13->[ Obj_25, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ Obj_21, ]
			Obj_21.h->[ ]
		}
	}
	Out: 
	{
		stack{
			$i0->[ @Obj_23, ]
			$i1->[ ]
			$r0->[ Obj_21, ]
			$r10->[ @Obj_22, ]
			$r12->[ @Obj_23, ]
			$r13->[ Obj_25, ]
			$r2->[ @field_global, ]
			$r3->[ @Obj_22, ]
			$r4->[ @Obj_22, ]
			$r5->[ @Obj_22, ]
			$r6->[ @Obj_22, ]
			$r7->[ @Obj_22, ]
			$r8->[ @Obj_22, ]
			$r9->[ Obj_22, ]
			global->[ @field_global, ]
			r11->[ @this, ]
			r14->[ ]
			x->[ @field_x, ]
			y->[ @field_y, ]
		}
		heap{
			@Obj_22.f->[ @Obj_22, ]
			@Obj_22.g->[ Obj_22, ]
			@Obj_23.h->[ @Obj_23, ]
			@field_global.[]->[ @Obj_22, ]
			@this.y->[ Obj_21, ]
			Obj_21.h->[ ]
		}
	}
}
Escaping Info
Test:foo Obj_21 Obj_22 Obj_25 
Soot finished on Mon Mar 04 14:23:00 IST 2024
Soot has run for 0 min. 0 sec.
